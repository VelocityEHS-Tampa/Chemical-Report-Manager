@model ChemicalLibrary.TheoChemCleanshotIncident
@{
    ViewBag.Title = "Theochem CleanShot Report";
    string Updated = ViewBag.Updated;
    string Corrected = ViewBag.Corrected;
    string IncidentID = ViewBag.ID;

    List<SelectListItem> ReportType = new List<SelectListItem>(); //Countries
    ReportType.Add(new SelectListItem { Text = "Buster", Value = "Buster" });
    ReportType.Add(new SelectListItem { Text = "Clean Shot Sulfuric Acid", Value = "Clean Shot Sulfuric Acid", Selected = true });
    ReportType.Add(new SelectListItem { Text = "Clean Shot Instant Drain Opener", Value = "Clean Shot Instant Drain Opener" });

    List<SelectListItem> YesOrNo = new List<SelectListItem>(); //Yes or No
    YesOrNo.Add(new SelectListItem { Text = "", Value = "" });
    YesOrNo.Add(new SelectListItem { Text = "YES", Value = "YES" });
    YesOrNo.Add(new SelectListItem { Text = "NO", Value = "NO" });
    YesOrNo.Add(new SelectListItem { Text = "N/A", Value = "N/A" });
    YesOrNo.Add(new SelectListItem { Text = "UNK", Value = "UNK" });

    List<SelectListItem> TimeZones = new List<SelectListItem>(); //Yes or No
    TimeZones.Add(new SelectListItem { Text = "", Value = "" });
    TimeZones.Add(new SelectListItem { Text = "AKST", Value = "AKST" });
    TimeZones.Add(new SelectListItem { Text = "AST", Value = "AST" });
    TimeZones.Add(new SelectListItem { Text = "CST", Value = "CST" });
    TimeZones.Add(new SelectListItem { Text = "EST", Value = "EST" });
    TimeZones.Add(new SelectListItem { Text = "HAST", Value = "HAST" });
    TimeZones.Add(new SelectListItem { Text = "MST", Value = "MST" });
    TimeZones.Add(new SelectListItem { Text = "PST", Value = "PST" });
    TimeZones.Add(new SelectListItem { Text = "UTC", Value = "UTC" });

    List<SelectListItem> Units = new List<SelectListItem>(); //Yes or No
    Units.Add(new SelectListItem { Text = "", Value = "" });
    Units.Add(new SelectListItem { Text = "Cups", Value = "Cups" });
    Units.Add(new SelectListItem { Text = "Ounces", Value = "Ounces" });
    Units.Add(new SelectListItem { Text = "Pints", Value = "Pints" });
    Units.Add(new SelectListItem { Text = "Gallons", Value = "Gallons" });
    Units.Add(new SelectListItem { Text = "Liters", Value = "Liters" });
    Units.Add(new SelectListItem { Text = "Milliliters", Value = "Milliliters" });
    Units.Add(new SelectListItem { Text = "Teaspoons", Value = "Teaspoons" });
    Units.Add(new SelectListItem { Text = "Tablespoons", Value = "Tablespoons" });
    Units.Add(new SelectListItem { Text = "Other", Value = "Other" });
    Units.Add(new SelectListItem { Text = "Unknown", Value = "Unknown" });

}

<h2>Clean Shot Report</h2>

<div class="GLOHeader" id="GRCPHeader" style="font-size: 10pt;">Theochem Cleanshot Incident Report Search</div>
@using (Html.BeginForm("SearchCleanShotReport", "OtherReports", FormMethod.Post, new { @id = "SearchCleanShotForm" }))
{
    <div id="GenIncSearch" style="font-size: 10pt;">
        <br />
        <span>Search </span> <input type="text" id="cbsearch" name="cbsearch" class="form-control GLOFieldSpacing" style="width:20%;" /> <input type="submit" value="Search" class="form-control GLOFieldSpacing" style="width:10%;" />
    </div>
}
@using (Html.BeginForm("SubmitCleanShotReport", "OtherReports", FormMethod.Post, new { @id = "CleanShotForm" }))
{
    @* Report Information *@
    <div id="ReportInfo" style="font-size:10pt;">
        <br />
        <div class="GLOHeader" id="GRCPHeader">Report Information, Caller'ss Information, and Incident Information</div>
        <br />
        <div class="CrestInlineDisplay" id="ReportInfo" style="width:25%;">
            <span>Report Information</span>
            <hr />
            @Html.TextBox("Updated", Updated, new { @type = "hidden" })
            <span class="required-field">Type</span>
            @Html.DropDownListFor(m => m.Type, ReportType, new { id = "cbtype", @Name = "cbtype", @class = "GLOFieldSpacing", tabindex = "1" })
            <br />
            @if (Corrected == "true")
            {
                <span class="required-field">ERS Operator</span> @Html.TextBoxFor(m => m.Ers_Operator, new { @class = "form-control GLOFieldSpacing", @id = "txtersop", @Name = "txtersop", style = "width:50%;", @readonly = "" }) <br />
                <span class="required-field">Incident ID</span> @Html.TextBoxFor(m => m.Incident_ID, new { @class = "form-control GLOFieldSpacing", id = "txtincidentid", @Name = "txtincidentid", style = "width:50%;", @readonly = "" }) <br />
            }
            else
            {
                <span class="required-field">ERS Operator</span> @Html.TextBoxFor(m => m.Ers_Operator, new { @class = "form-control GLOFieldSpacing", @id = "txtersop", @Name = "txtersop", style = "width:50%;", @Value = @Session["Username"].ToString(), @readonly = "" }) <br />
                <span class="required-field">Incident ID</span> @Html.TextBoxFor(m => m.Incident_ID, new { @class = "form-control GLOFieldSpacing", id = "txtincidentid", @Name = "txtincidentid", style = "width:50%;", @readonly = "", @Value = IncidentID }) <br />
            }
            <span class="required-field">Date</span> @Html.TextBoxFor(m => m.Report_Date, new { @class = "form-control GLOFieldSpacing", id = "txtdate", @Name = "txtdate", style = "width:30%;", @Value = @DateTime.Now.ToString("MM/dd/yyyy"), placeholder = "__/__/____", onblur = "FormatDate(this.value, this.id)", tabindex = "2" }) <br />
            <span class="required-field">Time</span> @Html.TextBoxFor(m => m.Report_Time, new { @class = "form-control GLOFieldSpacing", id = "txttime", @Name = "txttime", style = "width:30%;", @Value = @DateTime.Now.ToString("HH:mm"), placeholder = "__:__", onblur = "FormatTime(this.value, this.id)", tabindex = "3" })<br />
        </div>
        <div class="CrestInlineDisplay" id="CallerInfo" style="width:25%;">
            <span>Caller's Information</span>
            <hr />
            <span class="required-field">Caller's Name</span> @Html.TextBoxFor(m => m.Caller_Name, new { @class = "form-control GLOFieldSpacing", id = "txtcallersname", @Name = "txtcallersname", style = "width:50%;", tabindex = "4" })<br />
            <span class="required-field">Phone #</span> @Html.TextBoxFor(m => m.Caller_Phone, new { @class = "form-control GLOFieldSpacing", id = "txtcallersphone", @Name = "txtcallersphone", style = "width:50%;", placeholder = "(___) ___-____", onblur = "FormatPhone(this.value, this.id)", tabindex = "5" })<br />
            <span>Affiliation</span> @Html.TextBoxFor(m => m.Caller_Affiliate, new { @class = "form-control GLOFieldSpacing", id = "txtcallersaffiliation", @Name = "txtcallersaffiliation", style = "width:50%;", tabindex = "6" }) <br />
            <span>Fax/Email</span> @Html.TextBoxFor(m => m.Caller_Fax_Email, new { @class = "form-control GLOFieldSpacing", id = "txtcallersfaxemail", @Name = "txtcallersfaxemail", style = "width:50%;", tabindex = "7" }) <br />
        </div>
        <div class="CrestInlineDisplay" id="IncidentInfo" style="width:49%;">
            <span>Incident Information</span>
            <hr />
            <span>Incident Street</span> @Html.TextBoxFor(m => m.Incident_Street, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidentstreet", @Name = "txtincidentstreet", tabindex = "8" }) <br />
            <span>Incident City</span> @Html.TextBoxFor(m => m.Incident_City, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidentcity", @Name = "txtincidentcity", tabindex = "9" })
            <span>Incident Date</span> @Html.TextBoxFor(m => m.Incident_Date, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidentdate", @Name = "txtincidentdate", placeholder = "__/__/____", onblur = "FormatDate(this.value, this.id)", tabindex = "12" })
            <br />
            <span>Incident State</span> @Html.TextBoxFor(m => m.Incident_State, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidentstate", @Name = "txtincidentstate", maxlength = "2", tabindex = "10" })
            <span>Incident Time</span> @Html.TextBoxFor(m => m.Incident_Time, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidenttime", @Name = "txtincidenttime", placeholder = "__:__", onblur = "FormatTime(this.value, this.id)", tabindex = "13" })
            <br />

            <span>Incident Country</span> @Html.TextBoxFor(m => m.Incident_Country, new { style = "width:25%", @class = "form-control GLOFieldSpacing", id = "txtincidentcountry", @Name = "txtincidentcountry", @Value = "USA", tabindex = "11" })
            <span>Incident Time Zone</span>
            @Html.DropDownListFor(m => m.Incident_Time_Zone, TimeZones, new { id = "cbincidenttimezone", @Name = "cbincidenttimezone", @class = "GLOFieldSpacing", tabindex = "14" })
            <br />
        </div>
    </div>
    @*Q uestionnaire *@
    <div id="Questionnaire" style="font-size: 10pt;">
        <div class="CrestInlineDisplay" style="width:70%;">
            <br />
            <div class="GLOHeader" id="GRCPHeader">Questionnaire</div>
            <br />
            <span class="required-field">What did you use the product for? Stopped drain? Stopped toilet? Etc.</span>
            @Html.TextBoxFor(M => M.Question_1, new { @class = "GLOFieldSpacing CleanShotOptionAlign", style = "width:50%;", @Name = "txtquest1", id = "txtquest1", tabindex = "15" })
            <hr />
            <span class="required-field">How much of this product did you use?</span>
            <div class="CleanShotOptionAlign">
                QTY @Html.TextBoxFor(m => m.Question_2_Quantity, new { id = "txtquest2qty", @Name = "txtquest2qty", @class = "GLOFieldSpacing", tabindex = "16" })
                UNITS
                @Html.DropDownListFor(m => m.Question_2_Units, Units, new { @class = "GLOFieldSpacing", @Name = "cbquest2units", tabindex = "17" })
            </div>
            <hr />
            <span class="required-field">Did you read all the product warnings prior to opening or using the product?</span>
            @Html.DropDownListFor(m => m.Question_3, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest3", id = "cbquest3", tabindex = "18" })
            <hr />
            <span class="required-field">Did you follow all of the warnings outlined on the label?</span>
            @Html.DropDownListFor(m => m.Question_4, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest4", id = "cbquest4", tabindex = "19" })
            <hr />
            <span class="required-field">Was the bottle kept and stored in the upright position?</span>
            @Html.DropDownListFor(m => m.Question_5, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest5", id = "cbquest5", tabindex = "20" })
            <hr />
            <span class="required-field">Was the cap replaced securely?</span>
            @Html.DropDownListFor(m => m.Question_6, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest6", id = "cbquest6", tabindex = "21" })
            <hr />
            <span class="required-field">Was the bottle placed back into its original plastic bag?</span>
            @Html.DropDownListFor(m => m.Question_7, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest7", id = "cbquest7", tabindex = "22" })
            <hr />
            <span class="required-field">Did you open the container on a flat, stable surface?</span>
            @Html.DropDownListFor(m => m.Question_8, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest8", id = "cbquest8", tabindex = "23" })
            <hr />
            <span class="required-field">Is it stored in a locked cabinet inaccessable to children, people unfamiliar with the use of the product?</span>
            @Html.DropDownListFor(m => m.Question_9, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest9", id = "cbquest9", tabindex = "24" })
            <hr />
            <span class="required-field">Did you pour any other chemicals or other drain openers into the drain prior to using this product?</span>
            @Html.DropDownListFor(m => m.Question_10_Yes_Or_No, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest10yesorno", id = "cbquest10yesorno", tabindex = "25" })
            <br />

            <span>&nbsp;&nbsp;&nbsp;&nbsp;If yes, what?</span>@Html.TextBoxFor(m => m.Question_10_IfYes_What, new { @class = "form-control GLOFieldSpacing", id = "txtquest10ifyeswhat", @Name = "txtquest10ifyeswhat", style = "width:75%;", tabindex = "26" })
            <hr />
            <span class="required-field">Did you have adequate ventilation?</span>
            @Html.DropDownListFor(m => m.Question_11_Yes_Or_No, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", @Name = "cbquest11yesorno", id = "cbquest11yesorno", tabindex = "27" })
            <br />

            <span>&nbsp;&nbsp;&nbsp;&nbsp;If yes, what?</span>@Html.TextBoxFor(m => m.Question_11_If_Yes_What, new { @class = "form-control GLOFieldSpacing", id = "txtquest11ifyeswhat", @Name = "txtquest11ifyeswhat", style = "width:75%;", tabindex = "28" })
            <hr />
            <span class="required-field">Did you remove the standing water prior to using this product?</span>
            @Html.DropDownListFor(m => m.Question_12, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", id = "cbquest12", @Name = "cbquest12", tabindex = "29" })
            <hr />
            <span class="required-field">Did you use protective gear?</span>
            @Html.DropDownListFor(m => m.Question_13, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", id = "cbquest13", @Name = "cbquest13", tabindex = "30" })
            <br />

            <span>&nbsp;&nbsp;&nbsp;&nbsp;If yes, what?</span>@Html.TextBoxFor(m => m.Question_14, new { @class = "form-control GLOFieldSpacing", id = "txtquest14", @Name = "txtquest14", style = "width:75%;", tabindex = "31" })
            <hr />
            <span class="required-field">Did you place a bucket or other container under the drain?</span>
            @Html.DropDownListFor(m => m.Question_15, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", id = "cbquest15", @Name = "cbquest15", tabindex = "32" })
            <hr />
            <span class="required-field">Did you place an inverted container over the opening after use?</span>
            @Html.DropDownListFor(m => m.Question_16, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", id = "cbquest16", @Name = "cbquest16", tabindex = "33" })
            <hr />
            <span class="required-field">Were the Neutralization and Odor instructions read to the caller?</span>
            @Html.DropDownListFor(m => m.Question_17, YesOrNo, new { @class = "GLOFieldSpacing CleanShotOptionAlign", id = "cbquest15", @Name = "cbquest17", tabindex = "34" })
        </div>
        <div class="CrestInlineDisplay" style="width:29%; text-align:center;">
            <br />
            <div class="GLOHeader" id="GRCPHeader">Add Customer Info/Incident Details and Subscriber's Info</div>
            <br />
            <span class="required-field">Additional Customer Information/Incident Details</span><br />
            @Html.TextAreaFor(m => m.Add_It_Comments_Details, new { id = "txtincidentdetails", @Name = "txtincidentdetails", cols = "45", rows = "10", tabindex = "35" })
            <br />
            <br />
            <span>Subscriber's Information</span>
            <hr />
            <span>Subscriber's Name</span> @Html.TextBoxFor(m => m.Sub_Name, new { id = "txtsubscribersname", @Name = "txtsubscribersname", @class = "form-control GLOFieldSpacing", style = "width:60%;", @Value = "Theochem Laboratories Inc", tabindex = "36" }) <br />
            <span>Administrative Contact</span> @Html.TextBoxFor(m => m.Sub_Administrative_Contact, new { id = "txtadmincontact", @Name = "txtadmincontact", @class = "form-control GLOFieldSpacing", style = "width: 50%;", @Value = "John Theofilos", tabindex = "37" }) <br />
            <span>Phone #</span> @Html.TextBoxFor(m => m.Sub_Phone, new { id = "txtphonenumber", @Name = "txtphonenumber", @class = "form-control GLOFieldSpacing", style = "width: 50%;", @Value = "813-237-6463", tabindex = "38" }) <br />
            <span>Fax #</span> @Html.TextBoxFor(m => m.Sub_Fax, new { id = "txtfaxnumber", @Name = "txtfaxnumber", @class = "form-control GLOFieldSpacing", style = "width: 50%;", @Value = "813-237-2059", tabindex = "39" }) <br />
            <span>Email Address</span> @Html.TextBoxFor(m => m.Sub_Email, new { id = "txtemailaddress", @Name = "txtemailaddress", @class = "form-control GLOFieldSpacing", style = "width: 60%;", @Value = "JT@theochem.com", tabindex = "40" }) <br />
            <span>Physical Address</span> @Html.TextBoxFor(m => m.Sub_Address, new { id = "txtphysicaladdress", @Name = "txtphysicaladdress", @class = "form-control GLOFieldSpacing", style = "width: 60%;", @Value = "7373 Rowlett Park Drive", tabindex = "41" }) <br />
            <span>City, State, Zip</span> @Html.TextBoxFor(m => m.Sub_City_State_Zip, new { id = "txtcitystatezip", @Name = "txtcitystatezip", @class = "form-control GLOFieldSpacing", style = "width: 50%;", @Value = "Tampa, FL, 33610", tabindex = "42" }) <br />
        </div>
    </div>
    <div id="FormButtons" style="padding:2%;text-align:right;">
        <input type="submit" value="Submit" class="form-control GRCPButtons required-field" id="btnsubmit" name="btnsubmit" onclick="return SubmitForm()" tabindex="99">
        <input type="button" value="Cancel" class="form-control GRCPButtons alert-info" id="btnclose" name="btnclose" onclick="ClearForm()">
    </div>
}

<script>
    var closing = true;

    $(document).ready(function () {
        @*if ("@Updated" == "") { //Only get new IDs when it is a new report.
            $.ajax({
                url: '/OtherReports/GetNewCleanShotID/',
                type: 'GET',
                success: function (data) {
                    $("#txtincidentid").val("CS-" + data.NewID);
                },
                error: function (data) {
                    alert("ERROR!");
                }
            });
        }*@
    });

    function ClearForm() {
        if (confirm("Are you sure you want to cancel this report?")) {
            window.location = "/Home/Index";
        }
    }
    function SubmitForm() {
        var submit = confirm("Please ensure all data entered is correct before submitting! Are you sure you want to submit this report ?");
        if (submit) {
            return true;
        } else {
            return false;
        }
    };
    function FormatDate(Date, FieldName) {
        //Purely number input, no slashes.
        if (Date.length == 8 && !Date.includes("/")) {
            var ds = Date.split("");
            var fulldate = ds[0] + ds[1] + "/" + ds[2] + ds[3] + "/" + ds[4] + ds[5] + ds[6] + ds[7];
            document.getElementById(FieldName).value = fulldate;
        }
    }
    function FormatTime(Time, FieldName) {
        //Purely number input, no semi-colons.
        if (Time.length == 4 && !Time.includes(":")) {
            var ts = Time.split("");
            var fulltime = ts[0] + ts[1] + ":" + ts[2] + ts[3];
            document.getElementById(FieldName).value = fulltime;
        }
    }
    function FormatPhone(Phone, FieldName) {
        //Purely number input, no parenthesis, no hyphens.
        if (Phone.length == 10 && !Phone.includes("-") && !Phone.includes("(") && !Phone.includes(")")) {
            var ps = Phone.split("");
            var fullphone = "(" + ps[0] + ps[1] + ps[2] + ") " + ps[3] + ps[4] + ps[5] + "-" + ps[6] + ps[7] + ps[8] + ps[9]
            document.getElementById(FieldName).value = fullphone;
        }
    }

</script>